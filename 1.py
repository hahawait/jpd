"""
–ó–∞–¥–∞—á–∞:

–ù–µ–æ–±—Ö–æ–¥–∏–º–æ –ø—Ä–æ–≤–µ—Å—Ç–∏ –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—é –≤–≤–µ–¥–µ–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º –¥–∞–Ω–Ω—ã—Ö. 
–ü—Ä–æ–≤–µ—Ä—è—é—Ç—Å—è –∫–ª—é—á–∏ –Ω–∞ –ø—Ä–µ–¥–º–µ—Ç —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è –Ω–∞–ø–∏—Å–∞–Ω–∏—è —Å –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–º–∏ –≤ list_keys –∑–Ω–∞—á–µ–Ω–∏—è–º–∏, –∞ —Ç–∞–∫–∂–µ –Ω–∞–ª–∏—á–∏–µ –æ—Ç–∫—Ä—ã–≤–∞—é—â–∏—Ö –∏ –∑–∞–∫—Ä—ã–≤–∞—é—â–∏—Ö —Å–∫–æ–±–æ–∫.
"""


def validate_text(test_text, list_keys):
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –Ω–∞–ª–∏—á–∏–µ –æ—Ç–∫—Ä—ã–≤–∞—é—â–∏—Ö –∏ –∑–∞–∫—Ä—ã–≤–∞—é—â–∏—Ö —Å–∫–æ–±–æ–∫
    if test_text.count('{') != test_text.count('}'):
        return "–û—à–∏–±–∫–∞: –Ω–µ—Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –æ—Ç–∫—Ä—ã–≤–∞—é—â–∏—Ö –∏ –∑–∞–∫—Ä—ã–≤–∞—é—â–∏—Ö —Å–∫–æ–±–æ–∫."

    # –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ –≤—Å–µ—Ö –∫–ª—é—á–µ–π –∏–∑ —Ç–µ–∫—Å—Ç–∞
    keys_in_text = set()
    start = 0
    while True:
        start = test_text.find('{', start)
        if start == -1:
            break
        end = test_text.find('}', start)
        if end == -1:
            return "–û—à–∏–±–∫–∞: –Ω–µ—Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –æ—Ç–∫—Ä—ã–≤–∞—é—â–∏—Ö –∏ –∑–∞–∫—Ä—ã–≤–∞—é—â–∏—Ö —Å–∫–æ–±–æ–∫."
        keys_in_text.add(test_text[start + 1:end])
        start = end + 1

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ –∫–ª—é—á–µ–π –∏–∑ —Ç–µ–∫—Å—Ç–∞ —Å –∫–ª—é—á–∞–º–∏ –∏–∑ —Å–ø–∏—Å–∫–∞
    for key in keys_in_text:
        if key not in list_keys:
            return f"–û—à–∏–±–∫–∞: –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –∫–ª—é—á '{key}'."

    return test_text


if __name__ == "__main__":
    Test_text = '''{name}, –≤–∞—à–∞ –∑–∞–ø–∏—Å—å –∏–∑–º–µ–Ω–µ–Ω–∞:

    ‚åöÔ∏è {day_month} –≤ {start_time}

    üë© {master}

    –£—Å–ª—É–≥–∏:

    {services}'''

    list_keys = ['name', 'day_month', 'day_of_week', 'start_time', 'end_time', 'master', 'services']

    result = validate_text(Test_text, list_keys)
    print(result)
